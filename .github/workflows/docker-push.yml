name: docker build
on:
  create:
    tags:
      - '1.*'

jobs:
  build:
    if: ${{ github.owner }} == "boypt"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get tag to build
        id: tag
        run: |
          latest_tag=$(git describe --tags | cut -d- -f1)
          echo "Use the latest release tag: ${latest_tag}"
          echo ::set-output name=tag::${latest_tag}

      - name: Prepare environment variables
        id: prepare
        run: |
          echo ::set-output name=docker_platforms::linux/386,linux/amd64,linux/arm64
          echo ::set-output name=docker_image::boypt/cloud-torrent
          echo ::set-output name=docker_tag::${{ steps.tag.outputs.tag }}
          echo ::set-output name=docker_is_push::${PUSH:-false}

      - name: Build tag & latest release
        run: |
          docker buildx build --platform ${{ steps.prepare.outputs.docker_platforms }} \
          --output "type=image,push=true" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.docker_tag }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
          --build-arg TAG=${{ steps.prepare.outputs.docker_tag }} \
          --file Dockerfile .
